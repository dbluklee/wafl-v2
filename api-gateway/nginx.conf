events {
    worker_connections 1024;
}

http {
    # 로그 형식 정의
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 업스트림 서버 정의
    upstream web_server {
        server wafl-web-server:8000;
    }

    upstream scraping_server {
        server wafl-scraping-server:8001;
    }

    upstream rag_server {
        server wafl-rag-server:8002;
    }

    # 메인 서버 설정
    server {
        listen 80;
        server_name localhost;

        # 로그 설정
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;


        # CORS 헤더 설정
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        # OPTIONS 요청 처리 (CORS preflight)
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # 웹 서버 라우팅 (회원가입, 매장 관리)
        location /api/stores {
            proxy_pass http://web_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/auth/ {
            proxy_pass http://web_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 스크래핑 서버 라우팅
        location /api/scraping/ {
            proxy_pass http://scraping_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # RAG 서버 라우팅 (API)
        location /api/rag/ {
            proxy_pass http://rag_server/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }

        # RAG 서버 라우팅 (웹 UI)
        location /rag/ {
            proxy_pass http://rag_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }

        # RAG 서버 루트 (리다이렉트)
        location = /rag {
            return 301 /rag/;
        }

        # 이미지 파일 서빙
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # 정적 파일 서빙 (웹 사이트)
        location / {
            proxy_pass http://web_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 '{"status":"healthy","timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }

        # API 헬스체크
        location /api/health {
            access_log off;
            return 200 '{"api_gateway":"healthy","web_server":"upstream","scraping_server":"upstream","rag_server":"upstream"}\n';
            add_header Content-Type application/json;
        }
    }
}